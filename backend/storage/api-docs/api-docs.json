{
    "openapi": "3.0.0",
    "info": {
        "title": "V General Contractos APIs",
        "description": "The APIs for the V General Contractors Company project",
        "version": "1.0.0",
        "contact": {
            "name": "V General Contractors",
            "url": "https://vgeneralcontractors.com/",
            "email": "info@vgeneralcontractors.com"
        }
    },
    "servers": [
        {
            "url": "http://44.203.54.211:8080/api/"
        }
    ],
    "tags": [
        {
            "name": "SocialAuth",
            "description": "Handles user social network authentication"
        },
        {
            "name": "Users",
            "description": "Handles user authentication information"
        },
        {
            "name": "Reset User Password",
            "description": "Handles resetting passwords for platform users"
        },
        {
            "name": "Permissions",
            "description": "Handles user permissions information"
        },
        {
            "name": "Roles",
            "description": "Handles user roles information"
        },
        {
            "name": "Users Data",
            "description": "Users Crud"
        },
        {
            "name": "Type Damage",
            "description": "Type Damage Crud"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": ["Users"],
                "summary": "User login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User login successfully",
                        "content": {
                            "text/plain": {
                                "example": "User logged successfully"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": ["Users"],
                "summary": "Register a new user",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registration successful",
                        "content": {
                            "text/plain": {
                                "example": "User data was successfully registered"
                            }
                        }
                    },
                    "400": {
                        "description": "(Bad Request) The data sent is incorrect"
                    },
                    "422": {
                        "description": "(Unprocessable Entity) Validation failed"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": ["Users"],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "uuid": "ID-a1b2c3d4-5e6f-7g8h-9i10",
                                        "photo": "https://example.com/profile-photo.png",
                                        "name": "John",
                                        "last_name": "Doe",
                                        "username": "john_doe",
                                        "email": "john@example.com",
                                        "phone": "123-456-7890",
                                        "date_of_birth": "10-01-1990",
                                        "address": "123 Main St",
                                        "zip_code": "12345",
                                        "city": "Exampleville",
                                        "country": "Exampleland",
                                        "gender": "Male",
                                        "user_role": "Role"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/update-password": {
            "post": {
                "tags": ["Users"],
                "summary": "Update user's password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/updatepassword_body"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/forgot-password": {
            "post": {
                "tags": ["Reset User Password"],
                "summary": "Forgot password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Password reset instructions sent successfully"
                    },
                    "422": {
                        "description": "(Unprocessable Entity) Validation failed"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/enter-pin": {
            "post": {
                "tags": ["Reset User Password"],
                "summary": "Reset user's password with token and enter PIN",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnterPinPassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "PIN verified. Proceed with password reset"
                    },
                    "422": {
                        "description": "(Unprocessable Entity) Validation failed"
                    },
                    "429": {
                        "description": "(Too Many Requests) The client has sent too many requests in a given amount of time"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": ["Reset User Password"],
                "summary": "Reset user's password with token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Reset password instructions sent successfully"
                    },
                    "422": {
                        "description": "(Unprocessable Entity) Validation failed"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/update-profile": {
            "post": {
                "tags": ["Users"],
                "summary": "Update user profile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfile"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "422": {
                        "description": "(Unprocessable Entity) Validation failed"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/update-profile-photo": {
            "post": {
                "tags": ["Users"],
                "summary": "Update user profile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfilePhoto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Photo Profile updated successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/biometric-login": {
            "post": {
                "tags": ["Users"],
                "summary": "User Biometric login",
                "responses": {
                    "200": {
                        "description": "User login successfully",
                        "content": {
                            "text/plain": {
                                "example": "User logged successfully"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": ["Users"],
                "summary": "Logout a user",
                "description": "Invalidate the provided bearer token to log out the user.",
                "responses": {
                    "200": {
                        "description": "Token invalidated successfully"
                    },
                    "401": {
                        "description": "Unauthorized - invalid token or token expired"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/permissions-list": {
            "get": {
                "tags": ["Permissions"],
                "summary": "Get all registered permissions",
                "responses": {
                    "200": {
                        "description": "List of registered permissions",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "name": "Permission 1"
                                    },
                                    {
                                        "name": "Permission 2"
                                    },
                                    {
                                        "name": "Permission 3"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/permissions": {
            "post": {
                "tags": ["Permissions"],
                "summary": "Store a new permission",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewPermission"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "New permission created successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/permissions/{id}": {
            "get": {
                "tags": ["Permissions"],
                "summary": "Get a permission by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission details retrieved successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "name": "Permission Name"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/permissions-update/{id}": {
            "put": {
                "tags": ["Permissions"],
                "summary": "Update a permission by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePermission"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Permission updated successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/permissions-delete/{id}": {
            "delete": {
                "tags": ["Permissions"],
                "summary": "Delete a permission by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Permission deleted successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/roles-list": {
            "get": {
                "tags": ["Roles"],
                "summary": "Get all registered roles",
                "responses": {
                    "200": {
                        "description": "List of registered roles",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "name": "Role 1"
                                    },
                                    {
                                        "name": "Role 2"
                                    },
                                    {
                                        "name": "Role 3"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/roles": {
            "post": {
                "tags": ["Roles"],
                "summary": "Store a new Role",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewRole"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "New Role created successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/roles/{id}": {
            "get": {
                "tags": ["Roles"],
                "summary": "Get a role by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role details retrieved successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "name": "Role Name"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/roles-permissions": {
            "get": {
                "tags": ["Roles"],
                "summary": "Get all roles associated with registered permissions.",
                "responses": {
                    "200": {
                        "description": "List of roles associated with registered permissions.",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "name": "Role 1",
                                        "permissions": [
                                            "Permission 1",
                                            "Permission 2"
                                        ]
                                    },
                                    {
                                        "name": "Role 2",
                                        "permissions": [
                                            "Permission 2",
                                            "Permission 3"
                                        ]
                                    },
                                    {
                                        "name": "Role 3",
                                        "permissions": [
                                            "Permission 1",
                                            "Permission 3"
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/roles/{id}/edit": {
            "get": {
                "tags": ["Roles"],
                "summary": "List of roles and permissions for editing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of roles and permissions for editing",
                        "content": {
                            "application/json": {
                                "example": {
                                    "role": {
                                        "id": 1,
                                        "name": "Role 1"
                                    },
                                    "permissions": [
                                        {
                                            "id": 1,
                                            "name": "Permission 1"
                                        },
                                        {
                                            "id": 2,
                                            "name": "Permission 2"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/roles-update/{id}": {
            "put": {
                "tags": ["Roles"],
                "summary": "Update a role by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRole"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/roles-delete/{id}": {
            "delete": {
                "tags": ["Roles"],
                "summary": "Delete a Role by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role deleted successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users-list": {
            "get": {
                "tags": ["Users Data"],
                "summary": "Get all registered users",
                "responses": {
                    "200": {
                        "description": "List of registered users",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "id": 1,
                                        "uuid": "ID-a1b2c3d4-5e6f-7g8h-9i10",
                                        "name": "John",
                                        "last_name": "Doe",
                                        "username": "john_doe",
                                        "email": "john@example.com",
                                        "phone": "123-456-7890",
                                        "date_of_birth": "10-01-1990",
                                        "address": "123 Main St",
                                        "zip_code": "12345",
                                        "city": "Exampleville",
                                        "country": "Exampleland",
                                        "gender": "Male",
                                        "role_id": 1
                                    },
                                    {
                                        "id": 2,
                                        "uuid": "ID-m15n16o17p1-8q19r20s21t2",
                                        "name": "Jane",
                                        "last_name": "Smith",
                                        "username": "jane_smith",
                                        "email": "jane@example.com",
                                        "phone": "987-654-3210",
                                        "date_of_birth": "15-02-1995",
                                        "address": "456 Oak St",
                                        "zip_code": "54321",
                                        "city": "Sampletown",
                                        "country": "Sampleland",
                                        "gender": "Female",
                                        "role_id": 2
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users-create": {
            "get": {
                "tags": ["Users Data"],
                "summary": "Get all Users associated with registered permissions.",
                "responses": {
                    "200": {
                        "description": "List of Users with roles associated with registered permissions.",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "name": "Role 1",
                                        "permissions": [
                                            "Permission 1",
                                            "Permission 2"
                                        ]
                                    },
                                    {
                                        "name": "Role 2",
                                        "permissions": [
                                            "Permission 2",
                                            "Permission 3"
                                        ]
                                    },
                                    {
                                        "name": "Role 3",
                                        "permissions": [
                                            "Permission 1",
                                            "Permission 3"
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users-store": {
            "post": {
                "tags": ["Users Data"],
                "summary": "Store a new User",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User created successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users-profile/{uuid}": {
            "get": {
                "tags": ["Users Data"],
                "summary": "Get a user by UUID",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "id": 1,
                                    "uuid": "Id-c123-2556-5656",
                                    "name": "Jon",
                                    "last_name": "Doe",
                                    "username": "john_doe",
                                    "email": "user@example.com",
                                    "phone": "123-456-7890",
                                    "date_of_birth": "10-01-1990",
                                    "address": "123 Main St",
                                    "zip_code": "12345",
                                    "city": "Exampleville",
                                    "country": "Exampleland",
                                    "gender": "Male",
                                    "role_id": 1
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users-list/{uuid}/edit": {
            "get": {
                "tags": ["Users Data"],
                "summary": "User Profile With Roles and Permissions for editing",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users roles and permissions for editing",
                        "content": {
                            "application/json": {
                                "example": {
                                    "user": {
                                        "id": 1,
                                        "uuid": "Id-c123-2556-5656",
                                        "name": "Jon",
                                        "last_name": "Doe",
                                        "username": "john_doe",
                                        "email": "user@example.com",
                                        "phone": "123-456-7890",
                                        "date_of_birth": "10-01-1990",
                                        "address": "123 Main St",
                                        "zip_code": "12345",
                                        "city": "Exampleville",
                                        "country": "Exampleland",
                                        "gender": "Male",
                                        "role_id": 1
                                    },
                                    "roles": {
                                        "Role 1": "Role 1",
                                        "Role 2": "Role 2",
                                        "Role 3": "Role 3"
                                    },
                                    "userRole": {
                                        "Role 1": "Role 1"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users-update/{uuid}": {
            "put": {
                "tags": ["Users Data"],
                "summary": "Update a user by UUID",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users-delete/{uuid}": {
            "delete": {
                "tags": ["Users Data"],
                "summary": "Delete a User by UUID",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users-restore/{uuid}": {
            "put": {
                "tags": ["Users Data"],
                "summary": "Restore a User by UUID",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User restored successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/username-available/{username}": {
            "get": {
                "tags": ["Users"],
                "summary": "Username to verify",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Username to verify",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Username Availability",
                        "content": {
                            "application/json": {
                                "example": {
                                    "username": "available"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/email-available/{email}": {
            "get": {
                "tags": ["Users"],
                "summary": "Email to verify",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email to verify",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email Availability",
                        "content": {
                            "application/json": {
                                "example": {
                                    "username": "Email is available"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/social-login": {
            "post": {
                "tags": ["SocialAuth"],
                "summary": "Social Networks Authentication Callback",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SocialLoginRegistration"
                            },
                            "example": {
                                "provider": "google",
                                "access_provider_token": "your_google_access_token_here"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Redirect to frontend or dashboard after successful authentication"
                    },
                    "422": {
                        "description": "(Unprocessable Entity) Validation failed"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/type-damage": {
            "get": {
                "tags": ["Type Damage"],
                "summary": "Get all registered type damage",
                "responses": {
                    "200": {
                        "description": "List of registered type damage",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "id": 1,
                                        "uuid": "4589-a1b2c3d4-5e6f-7g8h-9i10",
                                        "type_damage_name": "Water Damage",
                                        "description": "Description of Water Damage"
                                    },
                                    {
                                        "id": 2,
                                        "uuid": "ID-m15n16o17p1-8q19r20s21t2",
                                        "type_damage_name": "Roof",
                                        "description": "Description of Roof"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/type-damage/store": {
            "post": {
                "tags": ["Type Damage"],
                "summary": "Store a new Type Damage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewTypeDamage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Type Damage created successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/type-damage/{uuid}": {
            "get": {
                "tags": ["Type Damage"],
                "summary": "Get a type damage by UUID",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the data to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type Damage details retrieved successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "id": 1,
                                    "uuid": "Id-c123-2556-5656",
                                    "type_damage_name": "Water Damage",
                                    "description": "Description of Water Damage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/type-damage/update/{uuid}": {
            "patch": {
                "tags": ["Type Damage"],
                "summary": "Update a type damage by UUID",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the data to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTypeDamage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Type Damage updated successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/type-damage/delete/{uuid}": {
            "delete": {
                "tags": ["Type Damage"],
                "summary": "Delete a Type Damage by UUID",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the data to retrieve",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Type Damage deleted successfully"
                    },
                    "401": {
                        "description": "(Unauthorized) No authorization to call the service"
                    },
                    "404": {
                        "description": "(NotFound) No information found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "UserRegistration": {
                "type": "object",
                "properties": {
                    "photo": {
                        "type": "string",
                        "description": "Photo of the user",
                        "format": "binary"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name of the user"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username of the user"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the user",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone number of the user"
                    },
                    "address": {
                        "type": "string",
                        "description": "Address of the user"
                    },
                    "zip_code": {
                        "type": "string",
                        "description": "Zip Code of the user"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of the user"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country of the user"
                    },
                    "gender": {
                        "type": "string",
                        "description": "Gender of the user"
                    },
                    "role_id": {
                        "type": "integer",
                        "description": "Role ID of the user"
                    },
                    "provider": {
                        "type": "string",
                        "description": "Name of the Social Provider"
                    },
                    "provider_id": {
                        "type": "string",
                        "description": "Provider Id of the Social Provider"
                    },
                    "provider_avatar": {
                        "type": "string",
                        "description": "User avatar of the Social Provider"
                    }
                }
            },
            "UserLogin": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of the user",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user",
                        "format": "password"
                    }
                }
            },
            "ForgotPassword": {
                "required": ["email"],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of the user",
                        "format": "email"
                    }
                }
            },
            "ResetPassword": {
                "required": ["password", "password_confirmation", "token"],
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "password_confirmation": {
                        "type": "string"
                    }
                }
            },
            "EnterPinPassword": {
                "required": ["pin", "token"],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "token": {
                        "type": "string"
                    },
                    "pin": {
                        "type": "string"
                    }
                }
            },
            "UpdateProfile": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    }
                }
            },
            "UpdateProfilePhoto": {
                "type": "object",
                "properties": {
                    "photo": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "NewPermission": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Permission"
                    }
                }
            },
            "UpdatePermission": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "NewRole": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Role"
                    }
                }
            },
            "UpdateRole": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "array",
                        "description": "An array of permission IDs",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "UpdateUser": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "role_id": {
                        "type": "string"
                    }
                }
            },
            "SocialLoginRegistration": {
                "type": "object",
                "properties": {
                    "provider": {
                        "type": "string",
                        "description": "Name of the Social Provider"
                    },
                    "access_provider_token": {
                        "type": "string",
                        "description": "Access Provider Token of the Social Provider"
                    }
                }
            },
            "NewTypeDamage": {
                "type": "object",
                "properties": {
                    "type_damage_name": {
                        "type": "string",
                        "description": "Name of the Type Damage"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Type Damage"
                    }
                }
            },
            "UpdateTypeDamage": {
                "type": "object",
                "properties": {
                    "type_damage_name": {
                        "type": "string",
                        "description": "Name of the Type Damage"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Type Damage"
                    }
                }
            },
            "updatepassword_body": {
                "required": [
                    "confirmed_password",
                    "current_password",
                    "new_password"
                ],
                "type": "object",
                "properties": {
                    "current_password": {
                        "type": "string"
                    },
                    "confirmed_password": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    }
                }
            }
        },
        "responses": {
            "Unauthorized": {
                "description": "(Unauthorized) No authorization to call the service"
            },
            "NotFound": {
                "description": "(NotFound) No information found"
            },
            "BadRequest": {
                "description": "(Bad Request) The data sent is incorrect"
            },
            "Forbidden": {
                "description": "Unauthorized"
            },
            "UnprocessableEntity": {
                "description": "(Unprocessable Entity) Validation failed"
            },
            "ServerError": {
                "description": "Server error"
            },
            "TooManyRequests": {
                "description": "(Too Many Requests) The client has sent too many requests in a given amount of time"
            }
        },
        "parameters": {
            "PermissionId": {
                "name": "id",
                "in": "path",
                "description": "ID of the permission to retrieve",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "integer"
                }
            },
            "RoleId": {
                "name": "id",
                "in": "path",
                "description": "ID of the role to retrieve",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "integer"
                }
            },
            "UserId": {
                "name": "uuid",
                "in": "path",
                "description": "ID of the user to retrieve",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "resourceId": {
                "name": "uuid",
                "in": "path",
                "description": "UUID of the data to retrieve",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "CheckUsername": {
                "name": "username",
                "in": "path",
                "description": "Username to verify",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            },
            "CheckEmail": {
                "name": "email",
                "in": "path",
                "description": "Email to verify",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
